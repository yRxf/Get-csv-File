#include <Windows.h>
#include <tchar.h>
#include <string>
#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <map>
using std::cout;
using std::string;
using std::endl;
//void find_cout(string&, string&, const string);
int main(int argc, char* argv[])
{
	string name;
	if (argc == 1)
	{
		cout << "请输入文件名！";
		std::cin >> name;
		name += ".csv";
	}
	else
		name = argv[1];
	HWND hw = FindWindow("ConsoleWindowClass", NULL);							//获取窗口句柄
	std::ifstream iFile(name, std::ios::in);
	string z_title, token, m_countent, fenxi, fenlei;
	int num = 0;
	int image_int = 0, order_int = 0, script_int = 0, err_int = 0;
	iFile >> z_title;
	std::stringstream sstr(z_title);
	string image_url, m_order_id, uuru,err,scr_id;
	while (getline(sstr, token, ','))		//获取需要输出的信息，获取列数
	{
		++num;
	}
	while (getline(iFile, m_countent))
	{
		static bool is_huanhang = false;        //是否在换行里面
		static bool is_new = true;              //是否新单元格
		static bool is_check = false;           //是否校验
		bool is_break = false;                  //是否退出
		bool is_show = false;                   //是否输出
		static int num1 = 0;                    //循环校验
		std::stringstream sstr(m_countent);
		if (m_countent == "" && is_check)
		{
			++num1;
			continue;
		}

		while (std::getline(sstr, token, ','))
		{
			is_show = false;
			static string str("");
			token.erase(0, token.find_first_not_of("\t\r\n"));
			token.erase(token.find_last_not_of("\t\r\n") + 1);
			if (token == "" && !is_huanhang)
			{
				is_check = true;
				continue;
			}

			if (token.find("\"") == 0 && token.find_last_of("\"") == 0)		//第一个是引号且找不到别的引号，判断为换行引号,也有可能为换行引号结束
			{
				token.erase(0, 1);
				if (!is_huanhang)
				{

					is_huanhang = true;
					is_new = false;
				}
				else
				{
					is_huanhang = false;
				}
				is_check = false;
			}
			if (token == "")
			{
				continue;
			}
			if (is_huanhang)
			{
				if (token.back() == '"')
				{
					is_huanhang = false;
					token.erase(token.length() - 1, 1);
					is_check = true;
				}
				if (is_new)
				{
					str += token;
				}
				else
				{
					is_new = true;
					is_check = false;
				}
			}
			else
			{
				is_huanhang = false;
				is_check = true;
			}
			if (str == "")
				str = token;
			if (is_check)
			{
        cout << str << endl;            //str
				++num1;
				if (num == num1)
				{
					num1 = 0;
					is_show = true;
				}
				str = "";
				is_check = false;
			}
		}
	iFile.close();
	return 0;
}
